package com.wolfsoft.co.repository;

import java.util.List;

import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.PagingAndSortingRepository;

import com.wolfsoft.co.domain.RecipeWeek;

/**
* <p>Title: Repository interface - Spring Data JPA </p>
*
* <p>Description:Repository interface for the recipe_week database table, Generated by Masterclass </p>
*
* <p>Copyright: Copyright (c) 2014</p>
*
* <p>Company: Wolfsoft Co.</p>
*
* @author Farith Jose Heras Garcia
* @version 1.0
*/
public interface RecipeWeekRepository extends PagingAndSortingRepository<RecipeWeek,Integer> {

	//MYSQL
	  @Query(value = "SELECT rec_date , DAYNAME(rec_date) day, "
		+ "(CASE WHEN type_rec='1' THEN 'Breakfast' WHEN type_rec='2' THEN 'Lunch' ELSE 'Dinner' END) type, "
		+ "r.name_rec menu, (CASE WHEN rw.rec_with is null THEN '' ELSE rw.rec_with END) rec_with, "
		+ "(CASE WHEN n.description is null THEN '' ELSE n.description END) notification, rw.rw_id, rw.rec_id, "
		+ "convert(CONCAT('0', type_rec),UNSIGNED INTEGER) type_rec, n._id, n.done "
		+ "from recipe_week rw join recipe r on rw.rec_id=r.id_rec "
		+ "left join notification n on n.rw_id=rw.rw_id "
		+ "where rw.rec_date >= (select max(rec_date) from recipe_week where DAYNAME(rec_date)='Sunday') "
		+ "order by rw.rec_date, r.type_rec", nativeQuery=true)
//POSTGRESQL
//	  @Query(value = "select rec_date , to_char(rec_date,'day') dayName, "
//	  		+ "(CASE WHEN type_rec='1' THEN 'Breakfast' WHEN type_rec='2' THEN 'Lunch' ELSE 'Dinner' END) typeName, "
//	  		+ "r.name_rec menu, (CASE WHEN rw.rec_with is null THEN '' ELSE rw.rec_with END) rec_with, "
//	  		+ "(CASE WHEN n.description is null THEN '' ELSE n.description END) notification, rw.rw_id, rw.rec_id, type_rec, n._id, n.done "
//	  		+ "from recipe_week rw  join recipe r on rw.rec_id=r.id_rec left join notification n on n.rw_id=rw.rw_id "
//	  		+ "where rw.rec_date >= (select max(rec_date) from recipe_week where trim(to_char(rec_date,'day'))='sunday') "
//	  		+ "order by rw.rec_date, r.type_rec", nativeQuery=true)
	  List<Object[]> getWeeklyMenu();
}